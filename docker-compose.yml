version: '3.8'

services:
  # ClickHouse集群 - 节点1
  clickhouse-01:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-01
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./data/clickhouse-01:/var/lib/clickhouse
      - ./config/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./config/clickhouse/users.xml:/etc/clickhouse-server/users.xml
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=quant_password
    networks:
      - quant-network
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # ClickHouse集群 - 节点2
  clickhouse-02:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-02
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./data/clickhouse-02:/var/lib/clickhouse
      - ./config/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./config/clickhouse/users.xml:/etc/clickhouse-server/users.xml
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=quant_password
    networks:
      - quant-network
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # PostgreSQL主节点
  postgres-master:
    image: postgres:15-alpine
    container_name: postgres-master
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=quantanalyzer
      - POSTGRES_USER=quant_user
      - POSTGRES_PASSWORD=quant_password
      - POSTGRES_REPLICATION_MODE=master
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=repl_password
    volumes:
      - ./data/postgres-master:/var/lib/postgresql/data
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - quant-network

  # PostgreSQL从节点
  postgres-slave:
    image: postgres:15-alpine
    container_name: postgres-slave
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=quantanalyzer
      - POSTGRES_USER=quant_user
      - POSTGRES_PASSWORD=quant_password
      - POSTGRES_REPLICATION_MODE=slave
      - POSTGRES_MASTER_HOST=postgres-master
      - POSTGRES_MASTER_PORT=5432
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=repl_password
    volumes:
      - ./data/postgres-slave:/var/lib/postgresql/data
    depends_on:
      - postgres-master
    networks:
      - quant-network

  # Redis主节点
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    ports:
      - "6379:6379"
    command: redis-server --requirepass quant_password --appendonly yes
    volumes:
      - ./data/redis-master:/data
    networks:
      - quant-network

  # Redis从节点1
  redis-slave-1:
    image: redis:7-alpine
    container_name: redis-slave-1
    ports:
      - "6380:6379"
    command: redis-server --slaveof redis-master 6379 --requirepass quant_password --masterauth quant_password
    volumes:
      - ./data/redis-slave-1:/data
    depends_on:
      - redis-master
    networks:
      - quant-network

  # Redis从节点2
  redis-slave-2:
    image: redis:7-alpine
    container_name: redis-slave-2
    ports:
      - "6381:6379"
    command: redis-server --slaveof redis-master 6379 --requirepass quant_password --masterauth quant_password
    volumes:
      - ./data/redis-slave-2:/data
    depends_on:
      - redis-master
    networks:
      - quant-network

  # FastAPI应用服务
  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quantanalyzer-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://quant_user:quant_password@postgres-master:5432/quantanalyzer
      - CLICKHOUSE_HOST=clickhouse-01
      - REDIS_URL=redis://:quant_password@redis-master:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - ./rust-engine/target/release:/app/rust_lib
    depends_on:
      - postgres-master
      - clickhouse-01
      - redis-master
    networks:
      - quant-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Nginx负载均衡器
  nginx:
    image: nginx:alpine
    container_name: nginx-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - fastapi
    networks:
      - quant-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - quant-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=quant_admin
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - quant-network

networks:
  quant-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16